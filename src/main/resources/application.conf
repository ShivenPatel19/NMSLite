# Logging Configuration
logging {
  enabled = true
  level = "INFO"                               # Log level: TRACE, DEBUG, INFO, WARN, ERROR
  file.path = "logs/nmslite.log"
  file.enabled = true
  console.enabled = true
}

# Database Configuration
database {
  host = "localhost"
  port = 5432
  database = "nmslite"
  user = "nmslite"
  password = "nmslite"
  maxSize = 5
  blocking.timeout.seconds = 60
}

# HTTP Server Configuration
server {
  http.port = 8080
}

# Worker Pool Configuration
worker {
  pool.size = 10
}

# Shared Tools Configuration
tools {
  goengine.path = "./goengine/goengine"

  # fping Configuration - 2 Level Timeout Hierarchy
  fping {
    path = "fping"
    timeout.seconds = 5                      # Level 2: Per-IP timeout (fping -t parameter)
    batch.blocking.timeout.seconds = 180     # Level 1: Batch operation timeout (Vert.x executeBlocking)
  }

  # Port Check Configuration - 2 Level Timeout Hierarchy
  port.check {
    timeout.seconds = 5                      # Level 2: Per-socket timeout (TCP connection timeout)
    batch.blocking.timeout.seconds = 10      # Level 1: Batch operation timeout (Vert.x executeBlocking)
  }
}

# GoEngine Global Configuration
goengine {
  # Working directory and configuration paths
  working.directory = "./goengine"           # GoEngine working directory
  config.file = "config/goengine.yaml"       # GoEngine YAML configuration file path
}

# Discovery Configuration
discovery {
  batch.size = 100                          # Max IPs per GoEngine discovery request
  blocking.timeout.goengine = 300           # Vert.x blocking timeout for GoEngine discovery (Level 1: Batch) - 5 minutes
  eventbus.timeout.seconds = 300            # Event bus timeout for test discovery requests - 5 minutes

  # GoEngine Discovery Parameters (Java backend priority, GoEngine YAML fallback)
  goengine {
    timeout.seconds = 60                     # Overall timeout per IP during discovery (Level 2: Per-Device)
    connection.timeout.seconds = 20          # Timeout per credential attempt (Level 3: Per-Credential)
  }
}

# Polling Configuration
polling {
  # Polling Cycle Configuration
  cycle.interval.seconds = 60              # How often scheduler wakes up to check for due devices (1 min)
  batch.size = 50                          # Max devices per batch within a cycle
  max.cycles.skipped = 5                   # Auto-disable device after N consecutive cycle failures
  failure.log.path = "polling_failed/metrics_polling_failed.txt"  # Failure log file path

  blocking.timeout.goengine = 300          # Vert.x blocking timeout for GoEngine (Level 1: Batch) - 5 minutes
  connection.timeout.seconds = 20          # SSH/WinRM connection establishment timeout (Level 3: Per-Connection)
}

# Device Default Configuration
device {
  defaults {
    # Default alert thresholds (percentage)
    alert.threshold.cpu = 80.0
    alert.threshold.memory = 85.0
    alert.threshold.disk = 90.0

    # Default monitoring configuration (stored in database per device)
    polling.interval.seconds = 65           # Default interval for polling individual devices (5 min) <- now 65s, change it to 300s
    timeout.seconds = 60                    # Default timeout per device during metrics collection (Level 2: Per-Device, read from Database)
  }
}
